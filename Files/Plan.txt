--FIX NAV BAR
--change password

From Main Page;
    //When logged in Log in button will open user account
    //    If admin, route lead to admin page
       // If standard user - SU, lead to SU page

Both Account users
  //  After logging in, nav bar should say account rather than log in
  //  this page will allow the user to log out
  // this will allow the user to password update
    this will allow the user to view, update and cancel bookings
        //retrieve bookings for EMAIL of USER - seperate page
            //Ensure Select Box like Booking is included
            //Have buttons at bottom that say 'cancel' or 'edit Time' etc
               // CANCEL
                   // Delete Booking of Selection, of that Booking ID
            TODO: 
                //Check that when booking all info is stored as it should, like number of child seats? and the Price?
                Editing the booking - DO LAST as booking should have everything - wait till booking is complete FIRST
                //Input Login/Register Validation

                

After booking selection:
    Select option and payment
    //Check if user logged in   
           // chose this option // 1- USE FLASK WRAPPERS/ ON BOOK BUTTON CLICK FUNCTION
            2- CHECK IF LOGGED IN
                IF SO, COMPLETE FORM AS USUAL
                IF NOT, 
                if not make user log in/make account
                **didnt do this {}{} after logging in, go back to booking
    //Save booking under that users name in BOOKING table
    //print booking details as recipt on page
End user features include: Register/Login/Logout/password update, view, update, cancel booking

Booking Logic
    Single OR Roundtrip
        //Single will book 1 single flight
        //Roundtrip will book 2 flights
        //    BOOK 1 flight on day of departure
        //    BOOK 1 flight on day of return
        CANNOT Book if flight is full
        //CANNOT Book if day is SUNDAY

        DO something, 
            then check condition, 
        if condition 
            then STOP 
        else DO something

        ^such as if book single flight, using that infromation
        then if it is NotOneWay, then book another flight with the information reversed

    //Business is (Economy * 2)
    //Up to 3 Months in advance
    //discount based on advance time 
    //    Between 80 and 90 days - 20%
    //    Between 60 and 79 days - 10%
    //    Between 45 and 59 days - 5%
    //    Under 45 days No discount
    //Cancellations
    //    Before 60 days - no charges
    //    Between 30 to 60 days - 50% charge
    //    Within 30 days - 100% charge. 




Admin user perspective and features include:
//    1. Admin should be able to Login/Logout and update password
    2. Admin should be able to perform following tasks: Adding/updating/removing journeys or
    prices constraints or end user deails

    JOURNEY EDITOR:
        Update
        Remove
        PRICE constraints
    USER EDITOR:
        Add
        Update
        Remove

    for editing database entries v v v
        https://python-adv-web-apps.readthedocs.io/en/latest/flask_db3.html
    Notes:
        Put ID in route (admin only) such as '/update/<int:id>'
            For users check that their session ID matches the ID in the route
            OR use a form to get the ID (such as from the View booking page, get ID from hidden element or SELECTION?)
        >Then use that ID to get the data from the database
        Then use that data to populate the form
        Then use that form to update the database
        Then redirect to the main page

    3. Admin should be able to generate admin reports e.g.,
     //monthly sales, 
     //sales for each journey, 
    //top customers etc.


    4. Showing comparison of bookings in all or selected journeys, 



    

Consider Legal, Ethical, Social and Professional Issues, See at Week 7 / 19 Lecture Slides
    This is important to comply to, including the creation and handling of the website, such as CO2 emissions...
    o Be aware and comply with legal aspects e.g. copyright
    o Consider ethical issues e.g. privacy, transparency sustainable,
    green aspects
    o Consider social aspects e.g. diversity of users â€“ WCAG, mobile
    devices
    o Consider professional aspects e.g. standards compliance,
    requirements, testing, using mature technologies, security, etc.

